// Decompiled with JetBrains decompiler
// Type: Telerik.WinControls.UI.XmlDataFilter
// Assembly: BuilderRED, Version=3.5.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C1B998B6-FDC9-4BE9-BF3E-DE300E192916
// Assembly location: C:\Program Files (x86)\ERDC-CERL\SMS BUILDER RED\BuilderRED.exe

using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Serialization;

namespace Telerik.WinControls.UI
{
  [XmlRoot("DataFilter")]
  public class XmlDataFilter : IXmlTreeSerializable
  {
    [DefaultValue("")]
    [XmlAttribute("Expression")]
    public string Expression = string.Empty;
    [XmlAttribute("AutoGenerateDescriptorItems")]
    [DefaultValue(true)]
    public bool AutoGenerateDescriptorItems = true;
    [XmlAttribute("AllowAdd")]
    [DefaultValue(true)]
    public bool AllowAdd = true;
    [DefaultValue(true)]
    [XmlAttribute("AllowRemove")]
    public bool AllowRemove = true;
    [DefaultValue(0.025)]
    [XmlAttribute("PlusMinusAnimationStep")]
    public double PlusMinusAnimationStep = 0.025;
    [DefaultValue("\\")]
    [XmlAttribute("PathSeparator")]
    public string PathSeparator = "\\";
    [XmlIgnore]
    public Color BackColor = SystemColors.Control;
    [XmlAttribute("ShowLines")]
    [DefaultValue(true)]
    public bool ShowLines = true;
    [XmlAttribute("AllowDragDrop")]
    [DefaultValue(true)]
    public bool AllowDragDrop = true;
    [XmlAttribute("ItemHeight")]
    [DefaultValue(30)]
    public int ItemHeight = 30;
    [DefaultValue(true)]
    [XmlAttribute("LabelEdit")]
    public bool LabelEdit = true;
    [XmlIgnore]
    public Color LineColor = Color.FromArgb(243, 243, 244);
    [DefaultValue(2000)]
    [XmlAttribute("MouseDownEditDelay")]
    public int MouseDownEditDelay = 2000;
    [XmlAttribute("TreeIndent")]
    [DefaultValue(20)]
    public int TreeIndent = 20;
    [DefaultValue(true)]
    [XmlAttribute("ShowPlusMinus")]
    public bool ShowPlusMinus = true;
    [XmlAttribute("ShowRootLines")]
    [DefaultValue(true)]
    public bool ShowRootLines = true;
    [XmlAttribute("AllowDrop")]
    [DefaultValue(true)]
    public bool AllowDrop = true;
    [DefaultValue(true)]
    [XmlAttribute("ShowExpandCollapse")]
    public bool ShowExpandCollapse = true;
    [DefaultValue(ExpandAnimation.Opacity)]
    [XmlAttribute("ExpandAnimation")]
    public ExpandAnimation ExpandAnimation;
    [DefaultValue(false)]
    [XmlAttribute("AllowArbitaryItemHeight")]
    public bool AllowArbitraryItemHeight;
    [DefaultValue(false)]
    [XmlAttribute("MultiSelect")]
    public bool MultiSelect;
    [XmlAttribute("LineStyle")]
    [DefaultValue(TreeLineStyle.Solid)]
    public TreeLineStyle LineStyle;
    [XmlAttribute("SpacingBetweenNodes")]
    [DefaultValue(0)]
    public int SpacingBetweenNodes;
    [XmlAttribute("AllowPlusMinusAnimation")]
    [DefaultValue(false)]
    public bool AllowPlusMinusAnimation;
    [XmlAttribute("SortFieldNames")]
    [DefaultValue(false)]
    public bool SortFieldNames;
    [DefaultValue(false)]
    [XmlAttribute("CheckBoxes")]
    public bool CheckBoxes;
    [XmlAttribute("ThemeName")]
    [DefaultValue("")]
    public string ThemeName;
    [DefaultValue("Telerik.WinControls.UI.RadDataFilter")]
    [XmlAttribute("ThemeClassName")]
    public string ThemeClassName;
    [DefaultValue(RightToLeft.No)]
    [XmlAttribute("RightToLeft")]
    public RightToLeft RightToLeft;

    public XmlDataFilter()
    {
    }

    public XmlDataFilter(RadDataFilter dataFilter)
    {
      this.Expression = dataFilter.Expression;
      this.AutoGenerateDescriptorItems = dataFilter.AutoGenerateDescriptorItems;
      this.SortFieldNames = dataFilter.SortFieldNames;
      this.AllowAdd = dataFilter.AllowAdd;
      this.AllowRemove = dataFilter.AllowRemove;
      this.AllowDragDrop = dataFilter.AllowDragDrop;
      this.AllowDrop = dataFilter.AllowDrop;
      this.BackColor = dataFilter.BackColor;
      this.CheckBoxes = dataFilter.CheckBoxes;
      this.MultiSelect = dataFilter.MultiSelect;
      this.ItemHeight = dataFilter.ItemHeight;
      this.LineColor = dataFilter.LineColor;
      this.LineStyle = dataFilter.LineStyle;
      this.PathSeparator = dataFilter.PathSeparator;
      this.ShowLines = dataFilter.ShowLines;
      this.ShowExpandCollapse = dataFilter.ShowExpandCollapse;
      this.ShowRootLines = dataFilter.ShowRootLines;
      this.ThemeClassName = dataFilter.ThemeClassName;
      this.ThemeName = dataFilter.ThemeName;
      this.TreeIndent = dataFilter.TreeIndent;
      this.LabelEdit = dataFilter.AllowEdit;
      this.ExpandAnimation = dataFilter.ExpandAnimation;
      this.AllowArbitraryItemHeight = dataFilter.AllowArbitraryItemHeight;
      this.SpacingBetweenNodes = dataFilter.SpacingBetweenNodes;
      this.RightToLeft = dataFilter.RightToLeft;
    }

    [XmlAttribute("BackColor")]
    [DefaultValue("Control")]
    public string XmlBackColor
    {
      get
      {
        return XmlTreeNode.ColorConverter.ConvertToString((object) this.BackColor);
      }
      set
      {
        this.BackColor = (Color) XmlTreeNode.ColorConverter.ConvertFromString(value);
      }
    }

    [DefaultValue("243, 243, 244")]
    [XmlAttribute("LineColor")]
    public string XmlLineColor
    {
      get
      {
        return XmlTreeNode.ColorConverter.ConvertToString((object) this.LineColor);
      }
      set
      {
        this.LineColor = (Color) XmlTreeNode.ColorConverter.ConvertFromString(value);
      }
    }

    public void Deserialize(RadDataFilter dataFilter)
    {
      if (dataFilter == null)
        return;
      dataFilter.BeginUpdate();
      dataFilter.Expression = this.Expression;
      dataFilter.AutoGenerateDescriptorItems = this.AutoGenerateDescriptorItems;
      dataFilter.SortFieldNames = this.SortFieldNames;
      dataFilter.AllowAdd = this.AllowAdd;
      dataFilter.AllowRemove = this.AllowRemove;
      dataFilter.AllowDragDrop = this.AllowDragDrop;
      dataFilter.AllowDrop = this.AllowDrop;
      dataFilter.BackColor = this.BackColor;
      dataFilter.CheckBoxes = this.CheckBoxes;
      dataFilter.MultiSelect = this.MultiSelect;
      dataFilter.ItemHeight = this.ItemHeight;
      dataFilter.AllowEdit = this.LabelEdit;
      dataFilter.LineColor = this.LineColor;
      dataFilter.LineStyle = this.LineStyle;
      dataFilter.PathSeparator = this.PathSeparator;
      dataFilter.ShowLines = this.ShowLines;
      dataFilter.ShowExpandCollapse = this.ShowExpandCollapse;
      dataFilter.ShowRootLines = this.ShowRootLines;
      dataFilter.ThemeClassName = this.ThemeClassName;
      dataFilter.ThemeName = this.ThemeName;
      dataFilter.TreeIndent = this.TreeIndent;
      dataFilter.ExpandAnimation = this.ExpandAnimation;
      dataFilter.AllowArbitraryItemHeight = this.AllowArbitraryItemHeight;
      dataFilter.SpacingBetweenNodes = this.SpacingBetweenNodes;
      dataFilter.RightToLeft = this.RightToLeft;
      dataFilter.EndUpdate();
    }

    public virtual void ReadUnknownAttribute(XmlAttribute attribute)
    {
      bool result = false;
      switch (attribute.Name)
      {
        case "AllowMultiselect":
          if (!bool.TryParse(attribute.Value, out result))
            break;
          this.MultiSelect = result;
          break;
        case "AllowDragDropBetweenTreeViews":
          if (!bool.TryParse(attribute.Value, out result))
            break;
          this.AllowDragDrop = result;
          break;
      }
    }
  }
}
