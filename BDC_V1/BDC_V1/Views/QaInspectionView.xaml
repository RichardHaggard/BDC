<UserControl 
    x:Class="BDC_V1.Views.QaInspectionView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="True"
    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:local="clr-namespace:BDC_V1.Views"
    xmlns:utils="clr-namespace:BDC_V1.Utils"
    xmlns:converters="clr-namespace:BDC_V1.Converters"
    mc:Ignorable="d"
    MinHeight="400" Width="1000"
    >

  <UserControl.Resources>
    <converters:RatingToBrushConverter     x:Key="RatingToBrushConverter"     />
    <converters:DataFilterBooleanConverter x:Key="DataFilterBooleanConverter" />

    <Style x:Key="ToggleButtonBase" TargetType="RadioButton"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
      <Setter Property="Background"  Value="Transparent" />
      <Setter Property="Margin"      Value="0" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Border Background="{TemplateBinding Background}" >
              <Image Height="25" Margin="5,2,0,0"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Top"
                     Source="/BDC_V1;component/Resources/Filter (1).png" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>

      <Style.Triggers>
        <DataTrigger Value="true" 
                     Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, 
                     FallbackValue=false}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="ToggleButton">
                <Border Background="{TemplateBinding Background}" >
                  <Image Height="25" Margin="5,2,0,0"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Top"
                         Source="/BDC_V1;component/Resources/Filter_Green.png" />
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="DataGridColHeaderBase" TargetType="DataGridColumnHeader">
      <Setter Property="Background"  Value="#DEB40A" />
      <Setter Property="FontSize"    Value="16" />
      <Setter Property="FontWeight"  Value="Bold" />
      <Setter Property="Margin"      Value="0" />
      <Setter Property="BorderBrush" Value="Black" />
      <Setter Property="BorderThickness" Value="2" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="DataGridColumnHeaderRtg" TargetType="DataGridColumnHeader" 
           BasedOn="{StaticResource DataGridColHeaderBase}">
      <Setter Property="ContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <StackPanel>
              <Label Height="25" />   <!-- Filler to align the header label to the bottom -->
              <Label FontSize="16" FontWeight="Bold" 
                     HorizontalAlignment="Left"
                     VerticalAlignment="Bottom"
                     Background="Transparent" 
                     Content="{Binding}" />
            </StackPanel>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeaderBase" TargetType="DataGridColumnHeader" 
           BasedOn="{StaticResource DataGridColHeaderBase}">
      <Setter Property="ContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <StackPanel>
              <RadioButton Style="{StaticResource ToggleButtonBase}" 
                           GroupName="ColumnFilterGroup"
                           Tag="{Binding}"
                           Content="{Binding}"
                           >
                <!-- the first value is filter source and it is not in the local view tree, we have to get the context from the data grid to find it -->
                <!--    it selects which button is on from the ViewModel, the controls take care of it up here, changing the button does not update FilterSource,  -->
                <!--    but the click command does -->
                <!-- the second value will be the name of this column "Content={Binding}" above, it must match the description of the EnumSortingFilter item -->
                <RadioButton.IsChecked>
                  <MultiBinding Converter="{StaticResource DataFilterBooleanConverter}" Mode="OneWay">
                    <Binding Path="DataContext.FilterSource"
                             RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=DataGrid,AncestorLevel=1}"
                             UpdateSourceTrigger="PropertyChanged" />
                    <Binding Path="Content" RelativeSource="{RelativeSource Self}" />
                  </MultiBinding>
                </RadioButton.IsChecked>

                <!-- CmdFilterButtonChecked is not in the local view tree, we have to get the context from the data grid to find it -->
                <!-- the command parameter will be the name of this column {Binding}, it must match the description of the EnumSortingFilter item -->
                <!-- This is what updates the ViewModel FilterSource and also sets the filter conditions -->
                <i:Interaction.Triggers>
                  <i:EventTrigger EventName="Checked">
                    <i:InvokeCommandAction Command="{Binding DataContext.CmdFilterButtonChecked, 
                                              RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid,AncestorLevel=1}}"
                                              CommandParameter="{Binding}" />
                  </i:EventTrigger>
                </i:Interaction.Triggers>
              </RadioButton>

              <Label FontSize="16" FontWeight="Bold" 
                     HorizontalAlignment="Left"
                     VerticalAlignment="Bottom"
                     Background="Transparent" 
                     Content="{Binding}" />
            </StackPanel>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </UserControl.Resources>


  <!-- TODO: The sizing issues need to be looked into! -->
  <!-- The real problem is that the user control doesn't auto-size to take the  -->
  <!-- available space the Shell Tab allots it. The AutoScroll doesn't work the way it  -->
  <!-- should (engaging when the view area shrinks) and the controls inside the  -->
  <!-- this user control don't resize when more / less space is allotted.  -->

  <ScrollViewer HorizontalScrollBarVisibility="Auto"
                VerticalScrollBarVisibility="Auto"
                Margin="5,10,5,10">
    <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" /> <!-- 1 - Component -->
          <RowDefinition Height="Auto" /> <!-- 2 - Data Grid -->
          <RowDefinition Height="*"    /> <!-- room for the auto scroll -->
        </Grid.RowDefinitions>

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" /> <!-- room for the auto scroll -->
      </Grid.ColumnDefinitions>

        <!-- Button row -->
      <DockPanel Grid.Row="0" Grid.Column="0"
                 Margin="0,0,0,10" 
                 HorizontalAlignment="Stretch">

        <DockPanel HorizontalAlignment="Left">
            <Button ToolTip="Refresh"
              Height="75" Width="100" Margin="0,0,10,0"
              Command="{Binding CmdRefresh}"
              Style="{StaticResource MaterialDesignRaisedLightButton}">
                <Image Source="/BDC_V1;component/Resources/Refresh.png"/>
            </Button>

            <Button ToolTip="Review Issue"
              Height="75" Width="100" Margin="10,0,10,0"
              Command="{Binding CmdReviewIssue}"
              Style="{StaticResource MaterialDesignRaisedLightButton}">
                <Image Source="/BDC_V1;component/Resources/ReviewIssue (1).png"/>
            </Button>
         </DockPanel>

        <DockPanel HorizontalAlignment="Right"
                   LastChildFill="True">
            <Button ToolTip="Clear Filter" DockPanel.Dock="Left"
                    Height="75" Width="100" Margin="10,0,10,0"
                    Command="{Binding CmdClearFilter}"
                    Style="{StaticResource MaterialDesignRaisedLightButton}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <Image Grid.Row="0" Margin="0,0,0,-10"
                        Source="/BDC_V1;component/Resources/Filter_Clear (1).png"/>
                    <Label Grid.Row="1" FontSize="13" FontWeight="Bold">
                        Clear Filter
                    </Label>
                </Grid>
            </Button>

            <TextBox Height="75" MinWidth="300"
                     DockPanel.Dock="Right"
                     Background="LightYellow"
                     HorizontalAlignment="Stretch"
                     HorizontalContentAlignment="Left"
                     VerticalContentAlignment="Center"
                     VerticalScrollBarVisibility="Auto"
                     Style="{StaticResource TextBoxWrap}"
                     Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                />
        </DockPanel>
      </DockPanel>

            <!-- DataGrid -->
          <DataGrid Grid.Row="1" Grid.Column="0"
                    MinHeight="250"
                    Height="Auto"
                    Width="945"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    ColumnHeaderHeight="60"
                    ColumnWidth="100"
                    ColumnHeaderStyle="{StaticResource DataGridColumnHeaderBase}"
                    ItemsSource="{Binding InspectionInfoView}"
                    CanUserSortColumns="True"
                    CanUserResizeColumns="False"
                    GridLinesVisibility="All"
                    AutoGenerateColumns="False"
          >
            <DataGrid.Columns>
              <!-- The header titles must match the EnumSortingFilter descriptions, ignoring leading spaces -->
              <DataGridTextColumn Header=" Facility ID" Binding="{Binding Path=FacilityId }" />
              <DataGridTextColumn Header=" System ID"   Binding="{Binding Path=SystemId}"    />
              <DataGridTextColumn Header=" Inventory"   Binding="{Binding Path=ComponentId}" />
              <DataGridTextColumn Header=" Type"        Binding="{Binding Path=TypeName}"    />
              <DataGridTextColumn Header=" Section"     Binding="{Binding Path=SectionName}" />
              <DataGridTextColumn Header="Rtg."         Binding="{Binding Path=RatingText}"  Width="45"
                                  HeaderStyle="{StaticResource DataGridColumnHeaderRtg}">
                <DataGridTextColumn.CellStyle>
                  <Style TargetType="DataGridCell" >
                    <Setter Property="Background" 
                            Value="{Binding Path=Rating, 
                              Converter={StaticResource RatingToBrushConverter},
                              Mode=OneWay}" />
                  </Style>
                </DataGridTextColumn.CellStyle>
              </DataGridTextColumn>
              <DataGridTextColumn Header=" Inspection Issue" 
                                  Binding="{Binding Path=InspectionComment.CommentText}" 
                                  MinWidth="250"
                                  Width="400"
              >
                <DataGridTextColumn.ElementStyle>
                  <Style>                            
                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                  </Style>
                </DataGridTextColumn.ElementStyle>
              </DataGridTextColumn>
            </DataGrid.Columns>
          </DataGrid>
        </Grid>
    </ScrollViewer>
</UserControl>
