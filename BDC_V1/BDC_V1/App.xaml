<prism:PrismApplication x:Class="BDC_V1.App"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:prism="http://prismlibrary.com/"
                        xmlns:local="clr-namespace:BDC_V1">

  <Application.Resources>
    <ResourceDictionary>
      <Style x:Key="ImageClickBlockButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="118" />
        <Setter Property="Width" Value="130" />
        <Setter Property="Background" Value="LightBlue" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="5" />
      </Style>

      <Style x:Key="FacilityBlockButtonStyle" TargetType="Button"
             BasedOn="{StaticResource ImageClickBlockButtonStyle}">
        <Setter Property="Height" Value="95" />
        <Setter Property="Width" Value="160" />
        <Setter Property="Margin" Value="5,5,5,0" />
      </Style>

      <Style x:Key="ImageClickBlockPanelStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
      </Style>

      <Style x:Key="ImageClickBlockImageStyle" TargetType="Image">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="50" />
      </Style>

      <!-- Offset needed to visually center the image -->
      <Style x:Key="ImageClickBlockCommentImageStyle" TargetType="Image"
             BasedOn="{StaticResource ImageClickBlockImageStyle}">
        <Setter Property="Margin" Value="5,0,0,0" />
      </Style>

      <Style x:Key="ImageClickBlockTextStyle" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
      </Style>

      <!--Menu separator-->
      <Style x:Key="MenuSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Separator}">
              <Border BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Background="{TemplateBinding Background}"
                      Width="1"
                      SnapsToDevicePixels="true" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="MaterialDesignRaisedLightButton" TargetType="Button">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Background" Value="#9BC2E6" />
      </Style>

      <!--CheckBox base-->
      <Style x:Key="cbBase" TargetType="CheckBox">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="5" />
      </Style>

      <!--ComboBox base-->
      <Style x:Key="ComboBase" TargetType="ComboBox">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>

      <!--DatePicker-->
      <Style x:Key="dpBase" TargetType="DatePicker">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>

      <!--Base for Labels. Sets the font size, vertical alignment and margin-->
      <Style x:Key="LabelBase" TargetType="Label">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="0,5,10,5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>

      <!--Label that is center justified-->
      <Style x:Key="LabelCJ" TargetType="Label" BasedOn="{StaticResource LabelBase}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
      </Style>

      <!--Label that is left justified.-->
      <Style x:Key="LabelLJ" TargetType="Label" BasedOn="{StaticResource LabelBase}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
      </Style>

      <!--Lbel that is right justified.-->
      <Style x:Key="LabelRJ" TargetType="Label" BasedOn="{StaticResource LabelBase}">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="Margin" Value="0" />
      </Style>

      <!--Label that is gray bg with a black border. Indicates to user that contents are RO.-->
      <Style x:Key="LabelRO" TargetType="Label" BasedOn="{StaticResource LabelBase}">
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="3" />
      </Style>

      <!--Label that is bold.-->
      <Style x:Key="LabelBold" TargetType="Label" BasedOn="{StaticResource LabelBase}">
        <Setter Property="FontWeight" Value="Bold" />
      </Style>

      <!--Black border.-->
      <Style x:Key="BorderBlack" TargetType="Border">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="5" />
      </Style>

      <!--Black border with blue interior.-->
      <Style TargetType="Border" x:Key="BorderBlue" BasedOn="{StaticResource BorderBlack}">
        <Setter Property="Background" Value="LightBlue" />
      </Style>

      <!--Black border with yellow-orange bg-->
      <Style x:Key="BorderYO" TargetType="Border" BasedOn="{StaticResource BorderBlack}">
        <Setter Property="Background" Value="Moccasin" />
      </Style>

      <!--Base style from which the various other TextBox styles are derived.-->
      <Style x:Key="TextBoxBase" TargetType="TextBox">
        <Setter Property="FontSize" Value="15" />
      </Style>

      <!--TextBox that doesn't wrap-->
      <Style x:Key="TextBoxNoWrap" TargetType="TextBox" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>

      <!--RO TextBox-->
      <Style x:Key="TextBoxRO" TargetType="TextBox" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="IsReadOnly" Value="True" />
      </Style>

      <!--TextBox that wraps-->
      <Style x:Key="TextBoxWrap" TargetType="TextBox" BasedOn="{StaticResource TextBoxBase}">
        <Setter Property="TextWrapping" Value="Wrap" />
      </Style>

      <!--Toolbar button-->
      <Style x:Key="ToolbarButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedLightButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="50" />
      </Style>

      <Style TargetType="TabItem">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="TabItem">
              <Border Name="Border"
                      BorderBrush="Black"
                      BorderThickness="1,1,1,0"
                      CornerRadius="4,4,0,0"
                      Margin="5,5,5,0">
                <ContentPresenter x:Name="ContentSite"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  ContentSource="Header"
                                  Margin="40,0" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsSelected" Value="True">
                  <Setter Property="FontWeight" Value="Bold" />
                  <Setter TargetName="ContentSite"
                          Property="Height" Value="50" />
                  <Setter TargetName="Border"
                          Property="Margin" Value="5,0,5,0" />
                  <Setter TargetName="Border"
                          Property="BorderThickness" Value="3,3,3,0" />
                  <Setter TargetName="Border" Property="Background" Value="Yellow" />
                </Trigger>
                <!--
                <Trigger Property="IsSelected" Value="False">
                  <Setter TargetName="Border" Property="Background" Value="White" />
                </Trigger>
                -->
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

        <!--Light or dark colors specification.-->
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />-->

        <!--Specify the accent colors. This is just an example. There are many packages.-->
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Purple.xaml" />-->
      </ResourceDictionary.MergedDictionaries>

    </ResourceDictionary>

  </Application.Resources>

</prism:PrismApplication>
