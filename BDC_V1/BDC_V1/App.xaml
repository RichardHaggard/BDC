<prism:PrismApplication 
    x:Class="BDC_V1.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:local="clr-namespace:BDC_V1">

    <Application.Resources>
        <ResourceDictionary>
          <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
            <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />-->
            <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />-->
            <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />-->
            <ResourceDictionary Source="pack://application:,,,/Resources/LocalMaterialDesignDefaults.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
          </ResourceDictionary.MergedDictionaries>

            <!--DataGridHeader-->
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="#E0F2FF" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Height" Value="35" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <Border x:Name="columnHeaderBorder"
                                    BorderThickness="1"
                                    Padding="3,0,3,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#A5A5A5" />
                                            <GradientStop Offset="1" Color="#4B4B4B" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#DEB40A" />
                                            <GradientStop Offset="1" Color="#FF7F00" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                    
                </Setter>
            </Style>

            <!--Data grid row-->
            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>

            <!--Data grid header filter related-->
            <Style x:Key="FilterButtonStyleBase" TargetType="Button">
                <Setter Property="HorizontalAlignment"  Value="Stretch" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border CornerRadius="3"
                                BorderThickness="2"
                                Background="#E0F2FF"
                                BorderBrush="Green">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FilterButtonStyle" TargetType="Button">
                <Setter Property="HorizontalAlignment"  Value="Stretch" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Border CornerRadius="3"
                                    BorderThickness="2"
                                    Background="#E0F2FF"
                                    BorderBrush="Green">
                                    <Image Source="/BDC_V1;component/Resources/Filter (1).png"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ListBox style related-->
            <Style x:Key="CommentBoxStyle" TargetType="ListBox">
                <Setter Property="Margin" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="Background" Value="LightYellow" />
                <Setter Property="SelectionMode" Value="Single" />
            </Style>

            <Style x:Key="ImageBoxStyle" TargetType="ListBox" BasedOn="{StaticResource CommentBoxStyle}" >
                <Setter Property="Background" Value="Moccasin" />
            </Style>

            <!--Button style related-->
            <Style TargetType="Button" x:Key="MaterialDesignRaisedLightButton">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Background" Value="#9BC2E6" />
            </Style>

            <Style x:Key="btnImageText" TargetType="Button">
                <Setter Property="Background" Value="#9BC2E6"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Width" Value="150"/>
            </Style>

            <Style x:Key="ImageClickBlockButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="LightBlue" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="5" />
            </Style>

            <Style x:Key="FacilityBlockButtonStyle" TargetType="Button"
             BasedOn="{StaticResource ImageClickBlockButtonStyle}">
                <Setter Property="Height" Value="95" />
                <Setter Property="Width" Value="160" />
                <Setter Property="Margin" Value="5,5,5,0" />
            </Style>

            <!--Stackpanel related-->
            <Style x:Key="ImageClickBlockPanelStyle" TargetType="StackPanel">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="5" />
            </Style>

            <!--Image related-->
            <Style x:Key="ImageClickBlockImageStyle" TargetType="Image">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Height" Value="50" />
            </Style>

            <!-- Offset needed to visually center the image -->
            <Style x:Key="ImageClickBlockCommentImageStyle" TargetType="Image" 
                 BasedOn="{StaticResource ImageClickBlockImageStyle}">
                <Setter Property="Margin" Value="5,0,0,0" />
            </Style>

            <!--Label related-->
            <Style x:Key="ImageClickBlockTextStyle" TargetType="Label">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>

            <Style x:Key="ImageClickBlockTextStyle1" TargetType="Label" 
                 BasedOn="{StaticResource ImageClickBlockTextStyle}">
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>

            <Style x:Key="ImageClickBlockTextStyle2" TargetType="Label" 
                 BasedOn="{StaticResource ImageClickBlockTextStyle}">
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
            </Style>

            <!--Menu separator-->
            <Style x:Key="MenuSeparatorStyle" TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                <Setter Property="Margin" Value="0,2,0,2"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Width="1" 
                                SnapsToDevicePixels="true"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--CheckBox base-->
            <Style TargetType="CheckBox" x:Key="cbBase">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="5" />
            </Style>

            <!--ComboBox base-->
            <Style TargetType="ComboBox" x:Key="ComboBase">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <!--DatePicker-->
            <Style TargetType="DatePicker" x:Key="dpBase">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <!--Base for Labels. Sets the font size, vertical alignment and margin-->
            <Style TargetType="Label" x:Key="LabelBase">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Margin" Value="0,5,10,5" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <!--Label that is center justified-->
            <Style TargetType="Label" x:Key="LabelCJ" BasedOn="{StaticResource LabelBase}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>

            <!--Label that is left justified.-->
            <Style TargetType="Label" x:Key="LabelLJ" BasedOn="{StaticResource LabelBase}">
                <Setter Property="HorizontalContentAlignment" Value="Left" />
            </Style>

            <!--Lbel that is right justified.-->
            <Style TargetType="Label" x:Key="LabelRJ" BasedOn="{StaticResource LabelBase}">
                <Setter Property="HorizontalContentAlignment" Value="Right" />
                <Setter Property="Margin" Value="0" />
            </Style>

            <!--Label that is gray bg with a black border. Indicates to user that contents are RO.-->
            <Style TargetType="Label" x:Key="LabelRO" BasedOn="{StaticResource LabelBase}">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="3" />
            </Style>

            <!--Label that is soft yellow with a black border. Indicates to user that contents are RO
            and an external editor exists to modify cell contents.-->
            <Style TargetType="Label" x:Key="LabelROExtEd" BasedOn="{StaticResource LabelRO}">
                <Setter Property="Background" Value="LightYellow"/>
            </Style>

            <!--Label that is bold.-->
            <Style TargetType="Label" x:Key="LabelBold" BasedOn="{StaticResource LabelBase}">
                <Setter Property="FontWeight" Value="Bold" />
            </Style>


            <!--Label that is used in the thin bottom row image + text buttons.-->
            <Style TargetType="Label" x:Key="lblText" BasedOn="{StaticResource LabelBold}">
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>


            <!--Black border.-->
            <Style TargetType="Border" x:Key="BorderBlack" >
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="5" />
            </Style>

            <!--Black border with blue interior.-->
            <Style TargetType="Border" x:Key="BorderBlue"  BasedOn="{StaticResource BorderBlack}">
                <Setter Property="Background" Value="LightBlue" />
            </Style>

            <!--Black border with yellow-orange bg-->
            <Style TargetType="Border" x:Key="BorderYO"  BasedOn="{StaticResource BorderBlack}">
                <Setter Property="Background" Value="Moccasin" />
            </Style>

            <!--Base style from which the various other TextBox styles are derived.-->
            <Style TargetType="TextBox" x:Key="TextBoxBase">
                <Setter Property="FontSize" Value="15" />
            </Style>

            <!--TextBox that doesn't wrap-->
            <Style TargetType="TextBox" x:Key="TextBoxNoWrap" BasedOn="{StaticResource TextBoxBase}">
                <Setter Property="Margin" Value="5" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <!--RO TextBox-->
            <Style TargetType="TextBox" x:Key="TextBoxRO" BasedOn="{StaticResource TextBoxBase}">
                <Setter Property="IsReadOnly" Value="True" />
            </Style>

            <!--TextBox that wraps-->
            <Style TargetType="TextBox" x:Key="TextBoxWrap" BasedOn="{StaticResource TextBoxBase}">
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <!--Toolbar button-->
            <Style TargetType="Button" x:Key="ToolbarButton" BasedOn="{StaticResource MaterialDesignRaisedLightButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Height" Value="50" />
                <Setter Property="Width" Value="50" />
            </Style>



            <LinearGradientBrush 
                x:Key="Chrome_TabItemHotBackground"
                StartPoint="0,0"
                EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#3fffffff" Offset=".0"/>
                    <GradientStop Color="#7fffffff" Offset=".05"/>
                    <GradientStop Color="#3fffffff" Offset=".60"/>
                    <GradientStop Color="#3f000000" Offset="1"/>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>



            <!--TabItem style-->
            <Style TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid>
                                <Border 
                                    Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="Black" 
                                    BorderThickness="1,1,1,0" 
                                    CornerRadius="4,4,0,0" 
                                    Margin="5,5,5,0"
                                    />
                                <Border 
                                    Name="Shine"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="Transparent" 
                                    BorderThickness="0" 
                                    CornerRadius="4,4,0,0" 
                                    Margin="7,7,7,0"
                                    />
                                <ContentPresenter 
                                    x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="50,0"/>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Margin" Value="5,0,5,0"/>
                                    <Setter TargetName="ContentSite"  Property="Height" Value="50"/>
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter TargetName="Shine" Property="Background" Value="{StaticResource Chrome_TabItemHotBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>

                </Setter>
            </Style>

        </ResourceDictionary>

    </Application.Resources>

</prism:PrismApplication>
